// clearfix
.clearfix {
	@include clearfix;
}


// lists
.list-unstyled {
	@include list-unstyled;
}

.list-inline {
	@include list-inline;
}

.list-equal {
	@include list-equal;
}


// positioning
.block-center {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

.pull-left {
	float: left !important;
}

.pull-right {
	float: right !important;
}


// spacing
.spacing-bottom {
	margin-bottom: $spacing-base;
}


// media
.media img {
	max-width: none;
}

.media-left {
	padding-right: $spacing-base;
}

.media-right {
	padding-left: $spacing-base;
}

.media-left,
.media-right,
.media-body {
	display: table-cell;
	vertical-align: top;
}

.media-middle {
	vertical-align: middle;
}

.media-bottom {
	vertical-align: bottom;
}

.media-fullscreen {
	position: absolute;
	left: 50%;
	top: 50%;
	width: auto;
	height: auto;
	min-width: 100%;
	min-height: 100%;
	max-width: none;
	transform: translate(-50%, -50%);
}


// text helpers
.text-left {
	text-align: left;
}

.text-center {
	text-align: center;
}

.text-right {
	text-align: right;
}

.text-hide {
	@include text-hide;
}

.text-truncate {
	@include text-truncate;
}


// responsive embed
.embed-responsive {
	position: relative;
	overflow: hidden;

	&:before {
		content: '';
		display: block;
		padding-bottom: percentage(9 / 16);
	}

	iframe,
	embed,
	object,
	video {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		border: 0;
	}
}


// display and visibility helpers
.sr-only {
	@include sr-only;
}

.sr-only-focusable {
	@include sr-only-focusable;
}

.invisible {
	visibility: hidden !important;
}

.hidden {
	display: none !important;
}

@media print {
	.hidden-print {
		display: none !important;
	}
}

@include loop-breakpoints($mq: false) {
	.visible-#{$breakpoint} {
		display: none !important;
	}

	@if not ($is-first-breakpoint or $is-last-breakpoint) {
		.visible-#{$breakpoint}-up {
			display: none !important;
		}
	}
}

@include loop-breakpoints {
	.hidden-#{$breakpoint} {
		display: none !important;
	}

	.visible-#{$breakpoint} {
		display: block !important;
	}
}

@include loop-breakpoints($inclusive: true) {
	@if not ($is-first-breakpoint or $is-last-breakpoint) {
		.hidden-#{$breakpoint}-up {
			display: none !important;
		}

		.visible-#{$breakpoint}-up {
			display: block !important;
		}
	}
}
